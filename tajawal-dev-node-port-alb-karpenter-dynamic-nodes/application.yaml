apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-hello-world
  namespace: syed
  labels:
    app: nginx-hello-world
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-hello-world
  template:
    metadata:
      labels:
        app: nginx-hello-world
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #             - key: application_type
      #               operator: In
      #               values:
      #               - multi-az
      #             - key: failure-domain.beta.kubernetes.io/zone
      #               operator: In
      #               values:
      #                 - eu-west-1b
      #             - key: component
      #               operator: In
      #               values:
      #               - infra
      #             - key: karpenter
      #               operator: In
      #               values:
      #               - enabled                          
      # tolerations:
      #   - key: "application_type"
      #     operator: "Equal"
      #     value: "multi-az"
      #     effect: "NoSchedule"
      #   - key: "application_type"
      #     operator: "Equal"
      #     value: "multi-az"
      #     effect: "NoExecute"
      #   - key: "karpenter"
      #     operator: "Equal"
      #     value: "true"
      #     effect: "NoSchedule"

      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html-volume
        configMap:
          name: nginx-hello-world-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-hello-world-configmap
  namespace: syed
data:
  index.html: |
    <html>
    <head>
      <title>Hello World</title>
    </head>
    <body>
      <h1>Hello, World from Nginx!</h1>
    </body>
    </html>
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-hello-world-service
#   namespace: syed
# spec:
#   type: NodePort
#   selector:
#     app: nginx-hello-world
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     nodePort: 30079

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-hello-world-service
#   namespace: syed
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: "external"
#     service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
#     service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"

# spec:
#   type: LoadBalancer
#   selector:
#     app: nginx-hello-world
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     nodePort: 30079



## this will not create any load balancer ###
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-hello-world-service
#   namespace: syed
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: "external"
#     service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
#     service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    
# spec:
#   type: NodePort
#   selector:
#     app: nginx-hello-world
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     nodePort: 30079


## to check 2.5.0 version of AWS LBC. It should create NLB without any annotations ###
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-hello-world-service
#   namespace: syed
# spec:
#   type: LoadBalancer
#   selector:
#     app: nginx-hello-world
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     nodePort: 30079


## this is to check annotation effect elb

# ### this will create classic load balancer
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-hello-world-service
#   namespace: syed
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: "elb"
#     service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
# spec:
#   type: LoadBalancer
#   selector:
#     app: nginx-hello-world
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     nodePort: 30079


###
### lets see the effect of removing nodePort ####
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-hello-world-service
#   namespace: syed
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: "elb"
#     service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
# spec:
#   type: LoadBalancer
#   selector:
#     app: nginx-hello-world
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     # nodePort: 30079



## To check if pod is directly mapped ###
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hello-world-service-v1
  namespace: syed
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    
spec:
  type: NodePort
  selector:
    app: nginx-hello-world
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    nodePort: 30079

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hello-world-service
  namespace: syed
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    
spec:
  type: LoadBalancer
  selector:
    app: nginx-hello-world
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    nodePort: 30082